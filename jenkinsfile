pipeline {
	environment{
		IMAGE_NAME = "alpinehelloworld"
		IMAGE_TAG  = "latest"
		STAGING    = "Yacine-staging"
		PRODUCTION = "Yacine-production"
	}
	agent none
	stages {
		stage('Build image') {
			agent any
			steps {
				script {
					sh 'docker build -t aksylGit/$IMAGE_NAME:$IMAGE_TAG .'
				}
			}
		}
		
		stage('Run container based on Builded image') {
			agent any
			steps {
				script {
					sh '''
					
					docker run --name $IMAGE_NAME -d -p 80:50000 -e PORT=5000 aksylGit/$IMAGE_NAME:$IMAGE_TAG
					sleep 5
					'''
				}
			}
		}
		
		stage('test image') {
			agent any
			steps {
				script {
					sh '''
					curl http://localhost | grep -q "hello world!"
					'''
				}
			}
		}
		
		stage('Clean container') {
			agent any
			steps {
				script {
					sh '''
						docker stop $IMAGE_NAME
						docker stop $IMAGE_NAME
					'''
				}
			}
		}
		
		stage ('push image in staging and deploy it') {
			when {
					expression { GIT_BRANCH == 'origin/master'}
				 }
			agent any
			environment {
				HEROKU_API_KEY = credentials ('heroku_api_key')
			}
			
			steps {
				script {
					sh '''
						heroku container:login
						heroku create $STAGING || echo "project already exist"
						heroku container:push -a $STAGING web
						heroku container:release - a $STAGING web
						'''
				}
				
			}
			
			stage ('push image in Production and deploy it') {
			when {
					expression { GIT_BRANCH == 'origin/master'}
				 }
			agent any
			environment {
				HEROKU_API_KEY = credentials ('heroku_api_key')
			}
			
			steps {
				script {
					sh '''
						heroku container:login
						heroku create $PRODUCTION || echo "project already exist"
						heroku container:push -a $PRODUCTION web
						heroku container:release - a $PRODUCTION web
						'''
				}
				
			}
		}
	}
}
